package com.huo.filter;import org.springframework.web.filter.OncePerRequestFilter;import javax.servlet.FilterChain;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletRequestWrapper;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.UnsupportedEncodingException;public class RequestFilter extends OncePerRequestFilter {    @Override    protected void doFilterInternal(final HttpServletRequest request, HttpServletResponse response,            FilterChain filterChain) throws ServletException, IOException {        filterChain.doFilter(new HttpServletRequestWrapper(request) {            @Override            public String getParameter(String name) {                String value = super.getParameter(name);                return filter(this, value);            }            @Override            public String[] getParameterValues(String name) {                String[] values = super.getParameterValues(name);                if (values == null) {                    return null;                }                for (int i = 0; i < values.length; i++) {                    values[i] = filter(this, values[i]);                }                return values;            }        }, response);    }    private String filter(HttpServletRequest request, String input) {        String ret = input;        if (input == null || input.trim().equals("(null)")) {            return null;        }        final String userAgent = request.getHeader("User-Agent");        final String method = request.getMethod();        if (method.equalsIgnoreCase("get") || userAgent.toLowerCase().contains("android")) {            try {                ret = new String(input.getBytes("ISO8859-1"), "utf-8");            } catch (UnsupportedEncodingException e) {                e.printStackTrace();            }        }        return ret;    }}